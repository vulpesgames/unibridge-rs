// not (currently) generated by UniBridge.

using System;
using UnityEngine;
using UniBridge;

public class RotFerris : MonoBehaviour {
    [SerializeField] GameObject ferris;

    private unsafe void* _rustInstance;
    
    private void Awake() {
        // ランタイムの初期化を行う
        BridgeRuntime.InitializeRuntime();
        
        // Rust側のインスタンス（RotFerris）を取得する
        unsafe {
            _rustInstance = Internal.new_ferris();
        }
    }

    private void OnDestroy() {
        unsafe {
            Internal.kill_ferris(_rustInstance);
        }
    }

    private void Start() {
        // Rust側のインスタンスのStart()を呼び出す
        var methodName = System.Text.Encoding.UTF8.GetBytes("Start");
        var args       = new UInt64[] {};
        
        unsafe {
            fixed (UInt64* a = args)
            fixed (byte* b = methodName) {
                Internal.unibridge_invoke(_rustInstance,
                                          InstancePool.AppendInstance(this), 
                                          new Slice<char>((char*) b, (UIntPtr) methodName.Length),
                                          new Slice<UInt64>(a, (UIntPtr) args.Length));
            }
        }
    }

    private void Update() {
        // Rust側のインスタンスのUpdate()を呼び出す
        
        unsafe {
            var methodName = System.Text.Encoding.UTF8.GetBytes("Update");
            var args       = new UInt64[] {};
            fixed (UInt64* a = args)
            fixed (byte* b = methodName) {
                Internal.unibridge_invoke(_rustInstance, InstancePool.AppendInstance(this), 
                                          new Slice<char>((char*) b, (UIntPtr) methodName.Length),
                                          new Slice<UInt64>(a, (UIntPtr) args.Length));
            }
        }
    }

    public void SetFerrisRotation(float rot) {
        ferris.transform.rotation = Quaternion.Euler(0, 0, rot);
    }
}
